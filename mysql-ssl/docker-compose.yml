version: "3.8"
# https://docs.docker.com/compose/compose-file/

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    command: [ "mysqld",
               "--character-set-server=utf8mb4",
               "--collation-server=utf8mb4_unicode_ci",
               "--bind-address=0.0.0.0",
               "--log-error-verbosity",
               "--require_secure_transport=ON",
               "--ssl-ca=/etc/certs/root-ca.pem",
               "--ssl-cert=/etc/certs/server-cert.pem",
               "--ssl-key=/etc/certs/server-key.pem",
               "--default_authentication_plugin=mysql_native_password"
             ]
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: spring
      MYSQL_PASSWORD: spring
      MYSQL_DATABASE: testdb
    ports:
      - "3306:3306"
    volumes:
      - type: bind
        source: ./certs
        target: /etc/certs/
      - type: bind
        source: ./config/init.sql
        target: /docker-entrypoint-initdb.d/setup.sql
  mysql-client:
    build: ./client
    image: mysql-client-local
    container_name: mysql-client
    volumes:
      - type: bind
        source: ./certs
        target: /etc/certs
#  spring-app:
#    image: dhananjay12/spring-data-tomcat-pool-example:0.0.1
#    container_name: spring
#    environment:
#      spring.datasource.url: jdbc:mysql://mysql:3306/testdb?useSSL=true
#      spring.datasource.username: root
#      spring.datasource.password: root
#    ports:
#      - "8080:8080"


